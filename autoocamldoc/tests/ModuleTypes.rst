=========
Reference
=========

.. WARNING This file is generated by autoocamldoc. Manual changes will be lost.

.. module:: tests/ModuleTypes

  .. module_type:: MT

    .. module_type:: Signature

      Doc for Signature

      Doc' for Signature

      .. type:: t

    .. module_type:: Alias
      :contents_from: Signature

      Doc for Alias

      Doc' for Alias

      Doc for Signature

      Doc' for Signature

      .. type:: t

    .. module_type:: DoubleAlias
      :contents_from: Alias

      Doc for DoubleAlias

      Doc' for DoubleAlias

      Doc for Alias

      Doc' for Alias

      Doc for Signature

      Doc' for Signature

      .. type:: t

    .. module_type:: Functor

      Doc for Functor

      Doc' for Functor

      .. functor_parameter:: A

        .. type:: a

          Doc for a

          Doc' for a

      .. type:: t
        :manifest: A.a list

        Doc for t

        Doc' for t

    .. module_type:: MultiFunctor

      .. functor_parameter:: A

        .. type:: a

      .. functor_parameter:: B

        .. type:: b

      .. type:: t

    .. module_type:: FunctorAlias
      :contents_from: Functor

      Doc for FunctorAlias

      Doc' for FunctorAlias

      Doc for Functor

      Doc' for Functor

      .. functor_parameter:: A

        .. type:: a

          Doc for a

          Doc' for a

      .. type:: t
        :manifest: A.a list

        Doc for t

        Doc' for t

    .. module_type:: DoubleFunctorAlias
      :contents_from: FunctorAlias

      Doc for DoubleFunctorAlias

      Doc' for DoubleFunctorAlias

      Doc for FunctorAlias

      Doc' for FunctorAlias

      Doc for Functor

      Doc' for Functor

      .. functor_parameter:: A

        .. type:: a

          Doc for a

          Doc' for a

      .. type:: t
        :manifest: A.a list

        Doc for t

        Doc' for t

    .. module_type:: FunctorWithIdentifierContents
      :contents_from: Signature

      Doc for FunctorWithIdentifierContents

      Doc' for FunctorWithIdentifierContents

      Doc for Signature

      Doc' for Signature

      .. functor_parameter:: A

        .. type:: a

      .. type:: t

    .. module_type:: FunctorWithIdentifierContentsAlias
      :contents_from: FunctorWithIdentifierContents

      Doc for FunctorWithIdentifierContentsAlias

      Doc' for FunctorWithIdentifierContentsAlias

      Doc for FunctorWithIdentifierContents

      Doc' for FunctorWithIdentifierContents

      Doc for Signature

      Doc' for Signature

      .. functor_parameter:: A

        .. type:: a

      .. type:: t

    .. module_type:: FunctorWithIdentifierContentsDoubleAlias
      :contents_from: FunctorWithIdentifierContentsAlias

      Doc for FunctorWithIdentifierContentsDoubleAlias

      Doc' for FunctorWithIdentifierContentsDoubleAlias

      Doc for FunctorWithIdentifierContentsAlias

      Doc' for FunctorWithIdentifierContentsAlias

      Doc for FunctorWithIdentifierContents

      Doc' for FunctorWithIdentifierContents

      Doc for Signature

      Doc' for Signature

      .. functor_parameter:: A

        .. type:: a

      .. type:: t

    .. module_type:: ModuleTypeOf
      :contents_from: module type of Module

      Doc for ModuleTypeOf

      Doc' for ModuleTypeOf

      Doc for Module

      Doc' for Module

      .. type:: t

        Doc for t

        Doc' for t

    .. module_type:: ModuleTypeOfFunctor
      :contents_from: module type of FunctorModule

      Doc for ModuleTypeOfFunctor

      Doc' for ModuleTypeOfFunctor

      Doc for FunctorModule

      Doc' for FunctorModule

      .. functor_parameter:: A

        .. type:: a

          Doc for a

          Doc' for a

      .. type:: t
        :manifest: A.a list

        Doc for t

        Doc' for t

    .. module_type:: ModuleTypeOfMultiFunctor
      :contents_from: module type of MultiFunctorModule

      Doc for ModuleTypeOfMultiFunctor

      Doc' for ModuleTypeOfMultiFunctor

      Doc for MultiFunctorModule

      Doc' for MultiFunctorModule

      .. functor_parameter:: A

        .. type:: a

      .. functor_parameter:: B

        .. type:: b

      .. type:: t

    .. module_type:: ModuleTypeOfStruct
      :contents_from: module type of struct ... end

      Doc for ModuleTypeOfStruct

      Doc' for ModuleTypeOfStruct

      .. type:: t

        Doc for t

        Doc' for t

    .. module_type:: ModuleTypeOfLiteralFunctor
      :contents_from: module type of functor (...) -> struct ... end

      Doc for ModuleTypeOfLiteralFunctor

      Doc' for ModuleTypeOfLiteralFunctor

      .. functor_parameter:: A

        .. type:: a

      .. type:: t

        Doc for t

        Doc' for t

    .. module_type:: ModuleTypeOfApply
      :contents_from: module type of FunctorModule(struct ... end)

      Doc for ModuleTypeOfApply

      Doc' for ModuleTypeOfApply

      Doc for FunctorModule

      Doc' for FunctorModule

      .. type:: t
        :manifest: int list

        Doc for t

        Doc' for t

    .. module_type:: WithType
      :contents_from: ForWithType with type t0 = int and type 'a t1 = 'a list and type ('a, 'b) t2 = ('a, 'b) result

      Doc for WithType

      Doc' for WithType

      Doc for ForWithType

      Doc' for ForWithType

      .. type:: t0
        :manifest: int

      .. val:: v0
        :type: t0

        Doc for v0

        Doc' for v0

      .. type:: t1
        :parameters: +'a
        :manifest: 'a list

      .. val:: v1
        :type: int t1

        Doc for v1

        Doc' for v1

      .. type:: t2
        :parameters: (+'a, +'b)
        :manifest: ('a, 'b) result

      .. val:: v2
        :type: (int, float) t2

        Doc for v2

        Doc' for v2

    .. module_type:: WithTypeSubst
      :contents_from: ForWithType with type t0 := int and type 'a t1 := 'a list and type ('a, 'b) t2 := ('a, 'b) result

      Doc for WithTypeSubst

      Doc' for WithTypeSubst

      Doc for ForWithType

      Doc' for ForWithType

      .. val:: v0
        :type: int

        Doc for v0

        Doc' for v0

      .. val:: v1
        :type: int list

        Doc for v1

        Doc' for v1

      .. val:: v2
        :type: (int, float) result

        Doc for v2

        Doc' for v2

    .. module_type:: WithModule
      :contents_from: ForWithModule with module M = MyM

      Doc for WithModule

      Doc' for WithModule

      Doc for ForWithModule

      Doc' for ForWithModule

      .. module:: M

        Doc for MyM

        Doc' for MyM

        .. type:: t
          :manifest: int

          Doc for t=int

          Doc' for t=int

      .. val:: v
        :type: M.t

        Doc for v

        Doc' for v

    .. module_type:: WithModuleSubst
      :contents_from: ForWithModule with module M := MyM

      Doc for WithModuleSubst

      Doc' for WithModuleSubst

      Doc for ForWithModule

      Doc' for ForWithModule

      .. val:: v
        :type: MyM.t

        Doc for v

        Doc' for v

  .. incl::
    :contents_from: MT

    .. module_type:: Signature

      Doc for Signature

      Doc' for Signature

      .. type:: t

    .. module_type:: Alias
      :contents_from: Signature

      Doc for Alias

      Doc' for Alias

      Doc for Signature

      Doc' for Signature

      .. type:: t

    .. module_type:: DoubleAlias
      :contents_from: Alias

      Doc for DoubleAlias

      Doc' for DoubleAlias

      Doc for Alias

      Doc' for Alias

      Doc for Signature

      Doc' for Signature

      .. type:: t

    .. module_type:: Functor

      Doc for Functor

      Doc' for Functor

      .. functor_parameter:: A

        .. type:: a

          Doc for a

          Doc' for a

      .. type:: t
        :manifest: A.a list

        Doc for t

        Doc' for t

    .. module_type:: MultiFunctor

      .. functor_parameter:: A

        .. type:: a

      .. functor_parameter:: B

        .. type:: b

      .. type:: t

    .. module_type:: FunctorAlias
      :contents_from: Functor

      Doc for FunctorAlias

      Doc' for FunctorAlias

      Doc for Functor

      Doc' for Functor

      .. functor_parameter:: A

        .. type:: a

          Doc for a

          Doc' for a

      .. type:: t
        :manifest: A.a list

        Doc for t

        Doc' for t

    .. module_type:: DoubleFunctorAlias
      :contents_from: FunctorAlias

      Doc for DoubleFunctorAlias

      Doc' for DoubleFunctorAlias

      Doc for FunctorAlias

      Doc' for FunctorAlias

      Doc for Functor

      Doc' for Functor

      .. functor_parameter:: A

        .. type:: a

          Doc for a

          Doc' for a

      .. type:: t
        :manifest: A.a list

        Doc for t

        Doc' for t

    .. module_type:: FunctorWithIdentifierContents
      :contents_from: Signature

      Doc for FunctorWithIdentifierContents

      Doc' for FunctorWithIdentifierContents

      Doc for Signature

      Doc' for Signature

      .. functor_parameter:: A

        .. type:: a

      .. type:: t

    .. module_type:: FunctorWithIdentifierContentsAlias
      :contents_from: FunctorWithIdentifierContents

      Doc for FunctorWithIdentifierContentsAlias

      Doc' for FunctorWithIdentifierContentsAlias

      Doc for FunctorWithIdentifierContents

      Doc' for FunctorWithIdentifierContents

      Doc for Signature

      Doc' for Signature

      .. functor_parameter:: A

        .. type:: a

      .. type:: t

    .. module_type:: FunctorWithIdentifierContentsDoubleAlias
      :contents_from: FunctorWithIdentifierContentsAlias

      Doc for FunctorWithIdentifierContentsDoubleAlias

      Doc' for FunctorWithIdentifierContentsDoubleAlias

      Doc for FunctorWithIdentifierContentsAlias

      Doc' for FunctorWithIdentifierContentsAlias

      Doc for FunctorWithIdentifierContents

      Doc' for FunctorWithIdentifierContents

      Doc for Signature

      Doc' for Signature

      .. functor_parameter:: A

        .. type:: a

      .. type:: t

    .. module:: Module

      Doc for Module

      Doc' for Module

      .. type:: t

        Doc for t

        Doc' for t

    .. module_type:: ModuleTypeOf

      Doc for ModuleTypeOf

      Doc' for ModuleTypeOf

      .. type:: t

        Doc for t

        Doc' for t

    .. module:: FunctorModule
      :contents_from: Functor

      Doc for FunctorModule

      Doc' for FunctorModule

      Doc for Functor

      Doc' for Functor

      .. functor_parameter:: A

        .. type:: a

          Doc for a

          Doc' for a

      .. type:: t
        :manifest: A.a list

        Doc for t

        Doc' for t

    .. module_type:: ModuleTypeOfFunctor
      :contents_from: Functor

      Doc for ModuleTypeOfFunctor

      Doc' for ModuleTypeOfFunctor

      Doc for Functor

      Doc' for Functor

      .. functor_parameter:: A

        .. type:: a

          Doc for a

          Doc' for a

      .. type:: t
        :manifest: A.a list

        Doc for t

        Doc' for t

    .. module:: MultiFunctorModule
      :contents_from: MultiFunctor

      Doc for MultiFunctorModule

      Doc' for MultiFunctorModule

      .. functor_parameter:: A

        .. type:: a

      .. functor_parameter:: B

        .. type:: b

      .. type:: t

    .. module_type:: ModuleTypeOfMultiFunctor
      :contents_from: MultiFunctor

      Doc for ModuleTypeOfMultiFunctor

      Doc' for ModuleTypeOfMultiFunctor

      .. functor_parameter:: A

        .. type:: a

      .. functor_parameter:: B

        .. type:: b

      .. type:: t

    .. module_type:: ModuleTypeOfStruct

      Doc for ModuleTypeOfStruct

      Doc' for ModuleTypeOfStruct

      .. type:: t

        Doc for t

        Doc' for t

    .. module_type:: ModuleTypeOfLiteralFunctor

      Doc for ModuleTypeOfLiteralFunctor

      Doc' for ModuleTypeOfLiteralFunctor

      .. functor_parameter:: A

        .. type:: a

      .. type:: t

        Doc for t

        Doc' for t

    .. module_type:: ModuleTypeOfApply

      Doc for ModuleTypeOfApply

      Doc' for ModuleTypeOfApply

      .. type:: t
        :manifest: int list

        Doc for t

        Doc' for t

    .. module_type:: ForWithType

      Doc for ForWithType

      Doc' for ForWithType

      .. type:: t0

        Doc for t0

        Doc' for t0

      .. val:: v0
        :type: t0

        Doc for v0

        Doc' for v0

      .. type:: t1
        :parameters: 'a

        Doc for t1

        Doc' for t1

      .. val:: v1
        :type: int t1

        Doc for v1

        Doc' for v1

      .. type:: t2
        :parameters: ('a, 'b)

        Doc for t2

        Doc' for t2

      .. val:: v2
        :type: (int, float) t2

        Doc for v2

        Doc' for v2

    .. module_type:: WithType

      Doc for WithType

      Doc' for WithType

      .. type:: t0
        :manifest: int

      .. val:: v0
        :type: t0

        Doc for v0

        Doc' for v0

      .. type:: t1
        :parameters: +'a
        :manifest: 'a list

      .. val:: v1
        :type: int t1

        Doc for v1

        Doc' for v1

      .. type:: t2
        :parameters: (+'a, +'b)
        :manifest: ('a, 'b) result

      .. val:: v2
        :type: (int, float) t2

        Doc for v2

        Doc' for v2

    .. module_type:: WithTypeSubst

      Doc for WithTypeSubst

      Doc' for WithTypeSubst

      .. val:: v0
        :type: int

        Doc for v0

        Doc' for v0

      .. val:: v1
        :type: int list

        Doc for v1

        Doc' for v1

      .. val:: v2
        :type: (int, float) result

        Doc for v2

        Doc' for v2

    .. module_type:: ForWithModule

      Doc for ForWithModule

      Doc' for ForWithModule

      .. module:: M

        Doc of M

        Doc' of M

        .. type:: t

          Doc of t

          Doc' of t

      .. val:: v
        :type: M.t

        Doc for v

        Doc' for v

    .. module:: MyM

      Doc for MyM

      Doc' for MyM

      .. type:: t
        :manifest: int

        Doc for t=int

        Doc' for t=int

    .. module_type:: WithModule

      Doc for WithModule

      Doc' for WithModule

      .. module:: M

        Doc for MyM

        Doc' for MyM

        .. type:: t
          :manifest: int

          Doc for t=int

          Doc' for t=int

      .. val:: v
        :type: M.t

        Doc for v

        Doc' for v

    .. module_type:: WithModuleSubst

      Doc for WithModuleSubst

      Doc' for WithModuleSubst

      .. val:: v
        :type: MyM.t

        Doc for v

        Doc' for v

  A reference to a module type: :modtyp:`tests/ModuleTypes.Signature`.

